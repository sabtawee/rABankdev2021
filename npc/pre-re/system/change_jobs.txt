/*
=================== TERMS OF SERVICES. ===================
1. ALL RIGHT RESERVED RE-SELLER OR SHARE SCRIPT TO PUBLISH.
2. BUT YOU RE-SELLER OR SHARE SCRIPT WITH OUT UNAUTHORIZRD
   I WILL ALL CANCEL MY SUPPORT FOR YOU.
3. MAINTENANCE SCRIPTS WILL BE FREE SERVICES.
4. I WILL NOT KEEP ANY INFORMATIONS FROMS YOU SERVER THAT
   YOU SEND FOR ME.
5. I HOPE YOU WILL ALL ACCEPT TERMS OF SERVICES.
==========================================================
Script. Change Jobs																					 
Create By. [Eddga-Studio]
Translator By. Eddga Studio
Bug Report. Dollaporn Naraphan [ FB ]																					 
Contact Us. Dollaporn Naraphan [ FB ]																					 																				 
==========================================================
*/

morocc,152,111,6	script	Change Jobs	124,{
function Get_Job_Equip;
function	Require_Level	{
	if (BaseLevel < getarg(0) || JobLevel < getarg(1)) {
		.@blvl = getarg(0) - BaseLevel;
		.@jlvl = getarg(1) - JobLevel;
		mes "เงื่อนใขความต้องการของเลเวล :";
		mes ((getarg(0)>1)? 
			"^bb0000"+getarg(0)+"^000000 (^bb0000เลเวล^000000) / ":"")+"^00bb00"+
			getarg(1)+"^000000 (^00bb00จ็อบ^000000)";
		mes "คุณต้องเก็บ " +
			((.@blvl > 0) ? "^bb0000"+.@blvl+"^000000 เบส เลเวล " + 
				((.@jlvl > 0) ? "และ " : "") : "") +
			((.@jlvl > 0) ? "^00bb00"+.@jlvl+"^000000 จ็อบ เลเวล " : "") +
			"เพื่อดำเนินการต่อ.";
		close;
	}
	return;
}

function Is_Baby	{
	return ((getarg(0, eaclass())&EAJL_BABY)>0);
}

function	Can_Change_Third	{
	if( !.ThirdClass )
		return false;
	if( !(eaclass()&EAJL_2) )
		return false;
	if( eaclass()&EAJL_THIRD )
		return false;
	if( roclass(eaclass()|EAJL_THIRD) < 0 )
		return false;
	if( (eaclass()&EAJ_UPPERMASK) == EAJ_SUPER_NOVICE )
		return false;
	if( Is_Baby() && (!.BabyClass || !.BabyThird) )
		return false;
	return true;
}

function	Can_Rebirth	{
	if( !.RebirthClass )
		return false;
	if( !(eaclass()&EAJL_2) )
		return false;
	if( eaclass()&EAJL_UPPER )
		return false;
	if( roclass(eaclass()|EAJL_UPPER) < 0 )
		return false;
	if( Is_Baby() && !.BabyClass )
		return false;
	return true;
}

function	Is_First_Cls	{
	return (getarg(0) <= EAJ_TAEKWON);
}

function	Check_Riding	{
	if (checkfalcon() || checkcart() || checkriding() || ismounting()) {
		mes "กรุณาถอด " +
			((checkfalcon()) ? "falcon" : "") +
			((checkcart()) ? "cart" : "") +
			((checkriding()) ? "Peco" : "") +
			((ismounting()) ? "mount" : "") +
			" ของคุณ ก่อนที่จะดำเนินการต่อ.";
		close;
	}
	return;
}
function	Check_SkillPoints	{
	if (.SkillPointCheck && SkillPoint) {
		mes "โปรดใช้แต้มสกิลพอยท์ให้หมดก่อนที่จะดำเนินการต่อ.";
		close;
	}
	return;
}

function	Job_Options	{
	.@argcount = getargcount();
	.@arr_size = getarraysize(getarg(0));
	for( .@i = 1; .@i < .@argcount; .@i++) {
		setarray getelementofarray(getarg(0), .@arr_size++),getarg(.@i);
	}
}

	mes .NPCName$;
	Check_Riding();
	Check_SkillPoints();

	deletearray .@job_opt[0],getarraysize(.@job_opt);
	.@eac = eaclass();
	.@third_possible = Can_Change_Third();
	.@rebirth_possible = Can_Rebirth();
	.@first_eac = .@eac&EAJ_BASEMASK;
	.@second_eac = .@eac&EAJ_UPPERMASK;

	if( .@rebirth_possible ) {
		Require_Level(.Req_Rebirth[0], .Req_Rebirth[1]);
		Job_Options(.@job_opt, Job_Novice_High);
	}
	if( .@third_possible ) {
		Require_Level(.Req_Third[0], .Req_Third[1]);
		Job_Options(.@job_opt, roclass(.@eac|EAJL_THIRD));
	}
	 
	if (.SecondExpanded && 
	   (.@eac&EAJ_UPPERMASK) == EAJ_SUPER_NOVICE && 
	   !(eaclass()&EAJL_THIRD) ) {				 	
	   	if( !Is_Baby(.@eac) || (.BabyClass && .BabyExpanded) ) {
			Require_Level(.Req_Exp_SNOVI[0], .Req_Exp_SNOVI[1]);
			Job_Options(.@job_opt,roclass(.@eac|EAJL_THIRD));
		}
	}
	
	if (.SecondExpanded && 
		((.@eac&(~EAJL_BABY)) == EAJ_NINJA || 	
		(.@eac&(~EAJL_BABY)) == EAJ_GUNSLINGER)) {
		if( !Is_Baby(.@eac) || (.BabyClass && .BabyExpanded) ) {
			Require_Level(.Req_Exp_NJ_GS[0], .Req_Exp_NJ_GS[1]);
			Job_Options(.@job_opt, roclass(.@eac|EAJL_2_1));
		}
	}
	
	if (.@first_eac == EAJ_NOVICE && .@second_eac != EAJ_SUPER_NOVICE) {
		Require_Level(.Req_First[0], .Req_First[1]);
		switch(Class) {
			case Job_Novice:
				Job_Options(.@job_opt,Job_Swordman,
					Job_Mage, Job_Archer, Job_Acolyte, Job_Merchant, Job_Thief);
				if( .BabyNovice )
					Job_Options(.@job_opt, Job_Baby);
				break;
			case Job_Novice_High:
				if( .LastJob && lastJob )
					Job_Options(.@job_opt,
						roclass((eaclass(lastJob)&EAJ_BASEMASK)|EAJL_UPPER));
				else
					Job_Options(.@job_opt, 
						Job_Swordman_High, Job_Mage_High, Job_Archer_High,
						Job_Acolyte_High, Job_Merchant_High, Job_Thief_High);
				break;
			case Job_Baby:
				if( !.BabyClass )
					break;
				Job_Options(.@job_opt, Job_Baby_Swordman, Job_Baby_Mage,
					Job_Baby_Archer,Job_Baby_Acolyte, Job_Baby_Merchant,
					Job_Baby_Thief, Job_Super_Baby);
				if( .BabyExpanded )
					Job_Options(.@job_opt, Job_Super_Baby, Job_Baby_Taekwon,
						Job_Baby_Gunslinger, Job_Baby_Ninja);
				if( .BabySummoner )
					Job_Options(.@job_opt, Job_Baby_Summoner);
				break;
			default:
				mes "เกิดข้อผิดพลาดบางอย่าง.";
				close;
		}
	} else if( Is_First_Cls(.@eac) || 				
			   Is_First_Cls(.@eac&(~EAJL_UPPER)) ||	
			   (.BabyClass && Is_First_Cls(.@eac&(~EAJL_BABY))) ) {
		.@class1 = roclass(.@eac|EAJL_2_1);
		.@class2 = roclass(.@eac|EAJL_2_2);
		if(.LastJob && lastJob && (.@eac&EAJL_UPPER)) {
			Require_Level(.Req_Second[0], .Req_Second[1]);
			Job_Options(.@job_opt, lastJob + Job_Novice_High);
		} else {
			if( .@class1 > 0 ) {
				Require_Level(.Req_Second[0], .Req_Second[1]);
				Job_Options(.@job_opt, .@class1);
			}
			if( .@class2 > 0 ) {
				Require_Level(.Req_Second[0], .Req_Second[1]);
				Job_Options(.@job_opt, .@class2);
			}
		}
	}

	function Job_Menu;
	Job_Menu(.@job_opt);
	close;

function	Job_Menu	{
	function Confirm_Change;
	while(true) {
		.@opt_cnt =  getarraysize(getarg(0));
		if( .@opt_cnt <= 0 ) {
			mes "ไม่มีสายอาชีพที่สูงกว่านี้อีกแล้ว.";
			close;
		}

		.@selected = 0;
		if (.@opt_cnt > 1) {
			mes "กรุณาเลือกอาชีพที่คุณต้องการ.";
			.@menu$ = "";
			for (.@i = 0; .@i < .@opt_cnt; .@i++) {
				if( getelementofarray(getarg(0), .@i) == Job_Novice_High)
					.@jobname$ = "^0055FFไฮคลาส^000000";
				else
					.@jobname$ = jobname(getelementofarray(getarg(0), .@i));
				.@menu$ = .@menu$ + " ~ " + .@jobname$ + ":";
			}
			.@menu$ = .@menu$+" ~ ^777777ยกเลิก^000000";
			.@selected = select(.@menu$) - 1;
			if( .@selected < 0 || .@selected >= .@opt_cnt )
				close;
			next;
			mes .NPCName$;
		}
		.@class = getelementofarray(getarg(0), .@selected);
		if ((.@class == Job_Super_Novice || .@class == Job_Super_Baby) &&
				BaseLevel < .SNovice) {
			mes "คุณต้องมี เบส เลเวล " + .SNovice +
				" เพื่อที่จะดำเนินการเปลี่ยนอาชีพเป็น " + jobname(.@class) + ".";
			return;
		}
		Confirm_Change(.@class, .@opt_cnt > 1);
		next;
		mes .NPCName$;
	}
	return;
}

function	Job_Change	{
	.@to_cls = getarg(0);
	next;
	mes .NPCName$;
	mes "ตอนนี้คุณได้เปลี่ยนเป็น " + callfunc("F_InsertArticle", jobname(.@to_cls)) + " เรียบร้อยแล้ว !";
	if (.@to_cls == Job_Novice_High && .LastJob)
		lastJob = Class;
	jobchange .@to_cls;
	if (.@to_cls == Job_Novice_High)
		resetlvl(1);
	else if (.@to_cls == Job_Baby) {
		resetstatus;
		resetskill;
		set SkillPoint,0;
	}
	specialeffect2 EF_ANGEL2;
	specialeffect2 EF_ELECTRIC;
	if (.Platinum)
		callfunc "F_GetPlatinumSkills";
	if (.GetJobEquip)
		Get_Job_Equip();
	close;
}

function	Confirm_Change	{
	.@class = getarg(0, -1);
	.@back = getarg(1, false);
	if( .@class < 0 ) {
		mes "พบข้อผิดพลาดเกี่ยวกับอาชีพ.";
		close;
	}
	mes "คุณต้องการที่จะเปลี่ยนอาชีพเป็น ^0055FF"+jobname(.@class)+"^000000 ใช่หรือไม่ ?";
	.@job_option$ = " ~ เปลี่ยนอาชีพ ^0055FF"+jobname(.@class)+"^000000";
	if( .@class == Job_Novice_High)
		.@job_option$ = " ~ ^0055FFเปลี่ยนไฮคลาส^000000";
	
	if (select(.@job_option$+": ~ ^777777" + 
			((.@back) ?"ย้อนกลับ" : "ยกเลิก") + "^000000") == 1) {
		Job_Change(.@class);
	}
	if (!.@back)
		close;
	return;
}

function	Get_Job_Equip	{
	.@eac = eaclass();
	if( .@eac&EAJL_THIRD ) {
		getitem 2795,1;
		switch(BaseJob) {
			case Job_Knight:
				getitem 5746,1;	break;
			case Job_Wizard:
				getitem 5753,1;	break;
			case Job_Hunter:
				getitem 5748,1;	break;
			case Job_Priest:
				getitem 5747,1;	break;
			case Job_Blacksmith:
				getitem 5749,1;	break;
			case Job_Assassin:
				getitem 5755,1;	break;
			case Job_Crusader:
				getitem 5757,1;	break;
			case Job_Sage:
				getitem 5756,1;	break;
			case Job_Bard:
				getitem 5751,1;	break;
			case Job_Dancer:
				getitem 5758,1;	break;
			case Job_Monk:
				getitem 5754,1;	break;
			case Job_Alchemist:
				getitem 5752,1;	break;
			case Job_Rogue:
				getitem 5750,1; 		
				getitem 6121,1;			
				getitem 6122,1;	break;
		}
	} else if (.@eac&EAJL_2) {
		switch(BaseJob) {
			case Job_Knight:
				getitem 1163,1;	break;	
			case Job_Priest:
				getitem 1522,1;	break;	
			case Job_Wizard:
				getitem 1617,1;	break;	
			case Job_Blacksmith:
				getitem 1360,1;	break;	
			case Job_Hunter:
				getitem 1718,1;	break;	
			case Job_Assassin:
				getitem 1254,1;	break;	
			case Job_Crusader:
				getitem 1410,1;	break;	
			case Job_Monk:
				getitem 1807,1;	break;	
			case Job_Sage:
				getitem 1550,1;	break;	
			case Job_Rogue:
				getitem 1222,1;	break;	
			case Job_Alchemist:
				getitem 1126,1;	break;	
			case Job_Bard:
				getitem 1907,1;	break;	
			case Job_Dancer:
				getitem 1960,1;	break;	
			case Job_Super_Novice:
				getitem 1208,1;	break;	
			case Job_Gunslinger:
				getitem 13101,1; break;	
			case Job_Ninja:
				getitem 13010,1; break;	
			case Job_Star_Gladiator:
				getitem 1550,1;	break;	
			case Job_Soul_Linker:
				getitem 1617,1;	break;	
		}
	} else {
		switch(BaseClass) {
			case Job_Swordman:
				getitem 1108,1;	break;	
			case Job_Mage:
				getitem 1602,1;	break;	
			case Job_Archer:
				getitem 1705,1;	break;	
			case Job_Acolyte:
				getitem 1505,1;	break;	
			case Job_Merchant:
				getitem 1302,1;	break;	
			case Job_Thief:
				getitem 1208,1;	break;	
		}
	}
	return;
}

OnInit:
	.NPCName$ = "[ เปลี่ยนอาชีพ ]";
	setunitdata getnpcid(0),UNPC_GROUP_ID,2;
	waitingroom "[ เปลี่ยนอาชีพ ]",0;
	.ThirdClass = false;			
	.RebirthClass = false;			
	.SecondExpanded = false;		
	.BabyNovice = false;				
	.BabyClass = false;				
	.BabyThird = false;				
	.BabyExpanded = false;			
	.BabySummoner = false;			
	.LastJob = true;				
	.SkillPointCheck = true;		
	.Platinum = false;				
	.GetJobEquip = true;			

	setarray .Req_First[0],1,10; 		
	setarray .Req_Second[0],1,40; 		
	setarray .Req_Rebirth[0],99,50;		
	setarray .Req_Third[0],99,50;		
	setarray .Req_Exp_NJ_GS[0],99,70; 	
	setarray .Req_Exp_SNOVI[0],99,99; 	
	.SNovice = 45;						

	if( PACKETVER < 20161207 ) {
		if( .BabyExpanded )
			debugmes "jobmaster: BabyExpanded is disabled due to outdated PACKETVER.";
		if( .BabySummoner )
			debugmes "jobmaster: BabySummoner is disabled due to outdated PACKETVER.";
		.BabyExpanded = false;
		.BabySummoner = false;
	}
end;
}
